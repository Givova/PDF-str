#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (backend + frontend)
"""

import subprocess
import sys
import os
import time
from threading import Thread

def run_backend():
    """–ó–∞–ø—É—Å–∫ Flask backend"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Backend (Flask API)...")
    try:
        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É –∏ –∑–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        if os.name == 'nt':  # Windows
            subprocess.run([".venv\\Scripts\\python.exe", "app.py"], check=True)
        else:  # Linux/Mac
            subprocess.run([".venv/bin/python", "app.py"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend: {e}")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\nüõë Backend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def run_frontend():
    """–ó–∞–ø—É—Å–∫ React frontend"""
    print("‚öõÔ∏è  –ó–∞–ø—É—Å–∫ Frontend (React)...")
    try:
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É frontend
        os.chdir("frontend")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ npm
        npm_path = "npm"
        if os.name == 'nt':  # Windows
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ npm –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
            possible_paths = [
                "C:\\Program Files\\nodejs\\npm.cmd",
                "C:\\Program Files\\nodejs\\npm.exe",
                "npm.cmd",
                "npm"
            ]
            for path in possible_paths:
                try:
                    subprocess.run([path, "--version"], check=True, capture_output=True)
                    npm_path = path
                    break
                except (subprocess.CalledProcessError, FileNotFoundError):
                    continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ node_modules
        if not os.path.exists("node_modules"):
            print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π npm...")
            subprocess.run([npm_path, "install"], check=True)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        subprocess.run([npm_path, "start"], check=True)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ frontend: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Node.js –∏ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\nüõë Frontend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
        os.chdir("..")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üèóÔ∏è  PDF Generator - –ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    if not os.path.exists("data/Shablon.pdf"):
        print("‚ùå –§–∞–π–ª data/Shablon.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìÅ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —à–∞–±–ª–æ–Ω PDF –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ data/")
        sys.exit(1)
    
    if not os.path.exists("frontend/package.json"):
        print("‚ùå Frontend –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìÅ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ frontend —Å–æ–¥–µ—Ä–∂–∏—Ç React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        sys.exit(1)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º backend –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        backend_thread = Thread(target=run_backend, daemon=True)
        backend_thread.start()
        
        # –î–∞–µ–º backend –≤—Ä–µ–º—è –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        print("‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend...")
        time.sleep(3)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º frontend (–≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ)
        run_frontend()
        
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        sys.exit(0)

if __name__ == "__main__":
    main()


