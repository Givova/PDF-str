[{"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\index.tsx":"1","F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\App.tsx":"2","F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\components\\PolicyForm.tsx":"3","F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\services\\api.ts":"4","F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\components\\LicensePlateInput.tsx":"5","F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\utils\\licensePlateValidation.ts":"6"},{"size":264,"mtime":1757315380469,"results":"7","hashOfConfig":"8"},{"size":1296,"mtime":1757315380376,"results":"9","hashOfConfig":"8"},{"size":21695,"mtime":1757337180863,"results":"10","hashOfConfig":"8"},{"size":3635,"mtime":1757318019005,"results":"11","hashOfConfig":"8"},{"size":26209,"mtime":1757336759826,"results":"12","hashOfConfig":"8"},{"size":12644,"mtime":1757316906255,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1da7afv",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\index.tsx",[],[],"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\App.tsx",[],[],"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\components\\PolicyForm.tsx",["32","33","34","35","36"],[],"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\services\\api.ts",[],[],"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\components\\LicensePlateInput.tsx",["37"],[],"F:\\Work\\Projects\\Clone-pdf\\pdf-coordinate-example\\frontend\\src\\utils\\licensePlateValidation.ts",[],[],{"ruleId":"38","severity":1,"message":"39","line":126,"column":8,"nodeType":"40","messageId":"41","endLine":126,"endColumn":20},{"ruleId":"42","severity":1,"message":"43","line":155,"column":8,"nodeType":"44","endLine":183,"endColumn":3,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":155,"column":8,"nodeType":"44","endLine":183,"endColumn":3,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":211,"column":50,"nodeType":"50","messageId":"51","endLine":211,"endColumn":51,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":213,"column":48,"nodeType":"50","messageId":"51","endLine":213,"endColumn":49,"suggestions":"53"},{"ruleId":"38","severity":1,"message":"54","line":2,"column":38,"nodeType":"40","messageId":"41","endLine":2,"endColumn":43},"@typescript-eslint/no-unused-vars","'getTodayDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'calculateEndDate' function makes the dependencies of useCallback Hook (at line 200) change on every render. To fix this, wrap the definition of 'calculateEndDate' in its own useCallback() Hook.","VariableDeclarator",["55"],"The 'calculateEndDate' function makes the dependencies of useCallback Hook (at line 245) change on every render. To fix this, wrap the definition of 'calculateEndDate' in its own useCallback() Hook.",["56"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["57","58"],["59","60"],"'Paper' is defined but never used.",{"desc":"61","fix":"62"},{"desc":"61","fix":"63"},{"messageId":"64","fix":"65","desc":"66"},{"messageId":"67","fix":"68","desc":"69"},{"messageId":"64","fix":"70","desc":"66"},{"messageId":"67","fix":"71","desc":"69"},"Wrap the definition of 'calculateEndDate' in its own useCallback() Hook.",{"range":"72","text":"73"},{"range":"74","text":"73"},"removeEscape",{"range":"75","text":"76"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"77","text":"78"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"79","text":"76"},{"range":"80","text":"78"},[4145,4986],"useCallback((startDate: string, period: string): string => {\n\t\tif (!startDate || !period) return \"\"\n\n\t\tconst [day, month, year] = startDate.split(\".\")\n\t\tconst start = new Date(parseInt(year), parseInt(month) - 1, parseInt(day))\n\n\t\tconst periodData = insurancePeriods.find((p) => p.value === period)\n\t\tif (!periodData) return \"\"\n\n\t\tlet endDate: Date\n\t\tif (periodData.days) {\n\t\t\tendDate = new Date(\n\t\t\t\tstart.getTime() + periodData.days * 24 * 60 * 60 * 1000\n\t\t\t)\n\t\t} else if (periodData.months) {\n\t\t\tendDate = new Date(\n\t\t\t\tstart.getFullYear(),\n\t\t\t\tstart.getMonth() + periodData.months,\n\t\t\t\tstart.getDate()\n\t\t\t)\n\t\t} else {\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst endDay = String(endDate.getDate()).padStart(2, \"0\")\n\t\tconst endMonth = String(endDate.getMonth() + 1).padStart(2, \"0\")\n\t\tconst endYear = endDate.getFullYear()\n\t\treturn `${endDay}.${endMonth}.${endYear}`\n\t})",[4145,4986],[5742,5743],"",[5742,5742],"\\",[5838,5839],[5838,5838]]