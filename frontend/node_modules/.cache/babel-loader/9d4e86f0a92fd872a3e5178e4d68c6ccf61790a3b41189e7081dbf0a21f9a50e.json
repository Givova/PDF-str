{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Projects\\\\Clone-pdf\\\\pdf-coordinate-example\\\\frontend\\\\src\\\\components\\\\PolicyForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { Container, Paper, Typography, TextField, Button, Grid, Alert, CircularProgress, Box, FormControl, InputLabel, Select, MenuItem, Autocomplete } from \"@mui/material\";\nimport { Download as DownloadIcon, Description as PdfIcon } from \"@mui/icons-material\";\nimport { PdfGeneratorApi, downloadFile } from \"../services/api\";\nimport LicensePlateInput from \"./LicensePlateInput\";\nimport { LicensePlateValidator, licensePlateUtils } from \"../utils/licensePlateValidation\";\n\n// Начальные данные формы\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  fio: \"\",\n  address: \"\",\n  date_start: \"\",\n  date_end: \"\",\n  reg_number: \"\",\n  license_plate: {\n    category: \"standard\"\n  },\n  vehicle_type: \"\",\n  vehicle_category: \"standard\",\n  brand_model: \"\"\n};\n\n// Периоды страхования\nconst insurancePeriods = [{\n  value: \"15_days\",\n  label: \"15 дней\",\n  days: 15\n}, {\n  value: \"1_month\",\n  label: \"1 месяц\",\n  months: 1\n}, {\n  value: \"2_months\",\n  label: \"2 месяца\",\n  months: 2\n}, {\n  value: \"3_months\",\n  label: \"3 месяца\",\n  months: 3\n}, {\n  value: \"4_months\",\n  label: \"4 месяца\",\n  months: 4\n}, {\n  value: \"5_months\",\n  label: \"5 месяцев\",\n  months: 5\n}, {\n  value: \"6_months\",\n  label: \"6 месяцев\",\n  months: 6\n}, {\n  value: \"7_months\",\n  label: \"7 месяцев\",\n  months: 7\n}, {\n  value: \"8_months\",\n  label: \"8 месяцев\",\n  months: 8\n}, {\n  value: \"9_months\",\n  label: \"9 месяцев\",\n  months: 9\n}, {\n  value: \"10_months\",\n  label: \"10 месяцев\",\n  months: 10\n}, {\n  value: \"11_months\",\n  label: \"11 месяцев\",\n  months: 11\n}, {\n  value: \"12_months\",\n  label: \"12 месяцев\",\n  months: 12\n}];\n\n// Варианты типов транспортных средств согласно ГОСТ Р 50577-2018\nconst vehicleTypes = [{\n  value: \"A\",\n  label: \"A. CAR / ЛЕГКОВОЙ АВТОМОБИЛЬ\",\n  category: \"standard\"\n}, {\n  value: \"B\",\n  label: \"B. MOTORCYCLE / МОТОЦИКЛ\",\n  category: \"motorcycle\"\n}, {\n  value: \"C\",\n  label: \"C. LORRY OR TRACTOR / ГРУЗОВОЙ АВТОМОБИЛЬ ИЛИ ТЯГАЧ\",\n  category: \"standard\"\n}, {\n  value: \"D\",\n  label: \"D. CYCLE FITTED WITH AUXILIARY ENGINE / МОПЕД ИЛИ ВЕЛОСИПЕД С ПОДВЕСНЫМ ДВИГАТЕЛЕМ\",\n  category: \"motorcycle\"\n}, {\n  value: \"E\",\n  label: \"E. BUS / АВТОБУС\",\n  category: \"standard\"\n}, {\n  value: \"F1\",\n  label: \"F1. TRAILER TO CAR / ПРИЦЕП К ЛЕГКОВОМУ АВТОМОБИЛЮ\",\n  category: \"trailer\"\n}, {\n  value: \"F2\",\n  label: \"F2. TRAILER TO LORRY / ПРИЦЕП К ГРУЗОВОМУ АВТОМОБИЛЮ\",\n  category: \"trailer\"\n}, {\n  value: \"G\",\n  label: \"G. OTHERS / ПРОЧИЕ\",\n  category: \"standard\"\n}];\nconst PolicyForm = () => {\n  _s();\n  var _vehicleTypes$find;\n  const [formState, setFormState] = useState({\n    data: initialData,\n    loading: false,\n    errors: {}\n  });\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [vehicleOptions, setVehicleOptions] = useState([]);\n  const [vehicleLoading, setVehicleLoading] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState(\"\");\n\n  // Обновление данных формы\n  // Валидация символов для разных полей\n  const validateInput = useCallback((field, value) => {\n    switch (field) {\n      case \"fio\":\n      case \"address\":\n        // Разрешены только кириллица, цифры, пробелы и знаки препинания\n        const cyrillicPattern = /^[а-яёА-ЯЁ0-9\\s.,\\-\\/№]*$/;\n        if (!cyrillicPattern.test(value)) {\n          return value.replace(/[^а-яёА-ЯЁ0-9\\s.,\\-\\/№]/g, \"\");\n        }\n        return value;\n      default:\n        return value;\n    }\n  }, []);\n  const updateFormData = useCallback((field, value) => {\n    const stringValue = String(value);\n    const validatedValue = validateInput(field, stringValue);\n    setFormState(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        [field]: validatedValue\n      },\n      errors: {\n        ...prev.errors,\n        [field]: \"\"\n      } // Очищаем ошибку при изменении\n    }));\n    setSuccessMessage(\"\"); // Очищаем сообщение об успехе\n  }, [validateInput]);\n\n  // Определяем категорию по типу ТС\n  const getVehicleCategoryByType = useCallback(vehicleType => {\n    const vehicleInfo = vehicleTypes.find(v => v.value === vehicleType);\n    return vehicleInfo ? vehicleInfo.category : \"standard\";\n  }, []);\n\n  // Обработчик изменения данных регистрационного знака\n  const handleLicensePlateChange = useCallback(plateData => {\n    // Генерируем текстовое представление номера\n    const plateText = licensePlateUtils.formatForDisplay(plateData);\n    setFormState(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        license_plate: plateData,\n        vehicle_category: plateData.category,\n        reg_number: plateText\n      },\n      errors: {\n        ...prev.errors,\n        reg_number: \"\"\n      } // Очищаем ошибку при изменении\n    }));\n    setSuccessMessage(\"\"); // Очищаем сообщение об успехе\n  }, []);\n\n  // Обработчик изменения типа ТС - автоматически обновляем категорию номера\n  const handleVehicleTypeChange = useCallback(vehicleType => {\n    const newCategory = getVehicleCategoryByType(vehicleType);\n\n    // Обновляем категорию в данных регистрационного знака\n    const newLicensePlate = {\n      category: newCategory\n    };\n    setFormState(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        vehicle_type: vehicleType,\n        vehicle_category: newCategory,\n        license_plate: newLicensePlate,\n        reg_number: \"\" // Очищаем номер при смене типа\n      },\n      errors: {\n        ...prev.errors,\n        vehicle_type: \"\",\n        reg_number: \"\"\n      }\n    }));\n    setSuccessMessage(\"\");\n  }, [getVehicleCategoryByType]);\n\n  // Валидация формы\n  const validateForm = useCallback(() => {\n    const {\n      data\n    } = formState;\n    const newErrors = {};\n\n    // Проверяем обязательные поля\n    if (!data.fio.trim()) newErrors.fio = \"ФИО обязательно для заполнения\";\n    if (!data.address.trim()) newErrors.address = \"Адрес обязателен для заполнения\";\n\n    // Валидация регистрационного знака с помощью ГОСТ валидатора\n    if (data.license_plate) {\n      const plateValidation = LicensePlateValidator.validate(data.license_plate);\n      if (!plateValidation.isValid) {\n        newErrors.reg_number = plateValidation.errors.join(\"; \");\n      }\n    } else {\n      newErrors.reg_number = \"Регистрационный знак обязателен\";\n    }\n    if (!data.vehicle_type.trim()) newErrors.vehicle_type = \"Тип ТС обязателен\";\n    if (!data.brand_model.trim()) newErrors.brand_model = \"Марка и модель обязательны\";\n\n    // Проверяем формат дат\n    const dateRegex = /^\\d{2}\\.\\d{2}\\.\\d{4}$/;\n    if (!data.date_start.trim()) {\n      newErrors.date_start = \"Дата начала обязательна\";\n    } else if (!dateRegex.test(data.date_start)) {\n      newErrors.date_start = \"Формат даты: ДД.ММ.ГГГГ\";\n    }\n    if (!data.date_end.trim()) {\n      newErrors.date_end = \"Дата окончания обязательна\";\n    } else if (!dateRegex.test(data.date_end)) {\n      newErrors.date_end = \"Формат даты: ДД.ММ.ГГГГ\";\n    }\n    setFormState(prev => ({\n      ...prev,\n      errors: newErrors\n    }));\n    return Object.keys(newErrors).length === 0;\n  }, [formState]);\n\n  // Отправка формы\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setFormState(prev => ({\n      ...prev,\n      loading: true\n    }));\n    setSuccessMessage(\"\");\n    try {\n      const response = await PdfGeneratorApi.generatePdf(formState.data);\n      downloadFile(response.blob, response.filename);\n      setSuccessMessage(`PDF файл \"${response.filename}\" успешно сгенерирован и загружен!`);\n    } catch (error) {\n      setFormState(prev => ({\n        ...prev,\n        errors: {\n          ...prev.errors,\n          fio: error.message\n        }\n      }));\n    } finally {\n      setFormState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  }, [formState.data, validateForm]);\n\n  // Поиск автомобилей\n  const searchVehicles = useCallback(async query => {\n    if (!query || query.length < 2) {\n      setVehicleOptions([]);\n      return;\n    }\n    setVehicleLoading(true);\n    try {\n      const response = await fetch(`/api/search-vehicles?q=${encodeURIComponent(query)}`);\n      const data = await response.json();\n      if (data.results) {\n        const options = data.results.map(item => ({\n          label: item.label,\n          value: item.value\n        }));\n        setVehicleOptions(options);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при поиске автомобилей:\", error);\n      setVehicleOptions([]);\n    } finally {\n      setVehicleLoading(false);\n    }\n  }, []);\n  const {\n    data,\n    loading,\n    errors\n  } = formState;\n\n  // Сброс формы\n  const handleReset = useCallback(() => {\n    setFormState({\n      data: {\n        ...initialData,\n        license_plate: {\n          category: \"standard\"\n        }\n      },\n      loading: false,\n      errors: {}\n    });\n    setSuccessMessage(\"\");\n    setVehicleOptions([]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(PdfIcon, {\n          sx: {\n            mr: 2,\n            fontSize: 40,\n            color: \"primary.main\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          color: \"primary\",\n          children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0421\\u0438\\u043D\\u0435\\u0439 \\u043A\\u0430\\u0440\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 5\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 3\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\u0424\\u0418\\u041E \\u0441\\u0442\\u0440\\u0430\\u0445\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n              value: data.fio,\n              onChange: e => updateFormData(\"fio\", e.target.value),\n              error: !!errors.fio,\n              helperText: errors.fio || \"Только русские буквы, цифры и знаки препинания (будет автоматически транслитерировано)\",\n              placeholder: \"\\u0418\\u0432\\u0430\\u043D\\u043E\\u0432 \\u0418\\u0432\\u0430\\u043D \\u0418\\u0432\\u0430\\u043D\\u043E\\u0432\\u0438\\u0447\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0441\\u0442\\u0440\\u0430\\u0445\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n              value: data.address,\n              onChange: e => updateFormData(\"address\", e.target.value),\n              error: !!errors.address,\n              helperText: errors.address || \"Только русские буквы, цифры и знаки препинания (будет автоматически транслитерирован)\",\n              placeholder: \"\\u0433. \\u041C\\u043E\\u0441\\u043A\\u0432\\u0430, \\u0443\\u043B. \\u041F\\u0443\\u0448\\u043A\\u0438\\u043D\\u0430, \\u0434. 10, \\u043A\\u0432. 5\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"date\",\n              label: \"\\u0414\\u0430\\u0442\\u0430 \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430 \\u043F\\u043E\\u043B\\u0438\\u0441\\u0430\",\n              value: data.date_start ? data.date_start.split(\".\").reverse().join(\"-\") : \"\",\n              onChange: e => {\n                if (e.target.value) {\n                  const [year, month, day] = e.target.value.split(\"-\");\n                  updateFormData(\"date_start\", `${day}.${month}.${year}`);\n                } else {\n                  updateFormData(\"date_start\", \"\");\n                }\n              },\n              error: !!errors.date_start,\n              helperText: errors.date_start || \"Выберите дату\",\n              required: true,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"date\",\n              label: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F \\u043F\\u043E\\u043B\\u0438\\u0441\\u0430\",\n              value: data.date_end ? data.date_end.split(\".\").reverse().join(\"-\") : \"\",\n              onChange: e => {\n                if (e.target.value) {\n                  const [year, month, day] = e.target.value.split(\"-\");\n                  updateFormData(\"date_end\", `${day}.${month}.${year}`);\n                } else {\n                  updateFormData(\"date_end\", \"\");\n                }\n              },\n              error: !!errors.date_end,\n              helperText: errors.date_end || \"Выберите дату\",\n              required: true,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(LicensePlateInput, {\n              value: data.license_plate,\n              onChange: handleLicensePlateChange,\n              category: data.vehicle_category || \"standard\",\n              vehicleTypeLabel: (_vehicleTypes$find = vehicleTypes.find(v => v.value === data.vehicle_type)) === null || _vehicleTypes$find === void 0 ? void 0 : _vehicleTypes$find.label,\n              error: errors.reg_number,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              error: !!errors.vehicle_type,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"\\u0422\\u0438\\u043F \\u0442\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\\u043D\\u043E\\u0433\\u043E \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u0430\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: data.vehicle_type,\n                onChange: e => handleVehicleTypeChange(e.target.value),\n                label: \"\\u0422\\u0438\\u043F \\u0442\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\\u043D\\u043E\\u0433\\u043E \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432\\u0430\",\n                children: vehicleTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type.value,\n                  children: type.label\n                }, type.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 9\n              }, this), errors.vehicle_type && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"error\",\n                sx: {\n                  mt: 0.5,\n                  mx: 1.75\n                },\n                children: errors.vehicle_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              freeSolo: true,\n              options: vehicleOptions,\n              getOptionLabel: option => typeof option === \"string\" ? option : option.label,\n              value: data.brand_model,\n              onInputChange: (event, newInputValue) => {\n                updateFormData(\"brand_model\", newInputValue);\n                searchVehicles(newInputValue);\n              },\n              onChange: (event, newValue) => {\n                const value = typeof newValue === \"string\" ? newValue : (newValue === null || newValue === void 0 ? void 0 : newValue.value) || \"\";\n                updateFormData(\"brand_model\", value);\n              },\n              loading: vehicleLoading,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                fullWidth: true,\n                label: \"\\u041C\\u0430\\u0440\\u043A\\u0430 \\u0438 \\u043C\\u043E\\u0434\\u0435\\u043B\\u044C\",\n                placeholder: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0432\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u043C\\u0430\\u0440\\u043A\\u0443 \\u0438\\u043B\\u0438 \\u043C\\u043E\\u0434\\u0435\\u043B\\u044C...\",\n                error: !!errors.brand_model,\n                helperText: errors.brand_model || \"Выберите из списка или введите свой вариант\",\n                required: true,\n                InputProps: {\n                  ...params.InputProps,\n                  endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [vehicleLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      color: \"inherit\",\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 15\n                    }, this) : null, params.InputProps.endAdornment]\n                  }, void 0, true)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 10\n              }, this),\n              renderOption: (props, option) => /*#__PURE__*/_jsxDEV(\"li\", {\n                ...props,\n                children: typeof option === \"string\" ? option : option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 10\n              }, this),\n              noOptionsText: \"\\u041D\\u0435\\u0442 \\u043F\\u043E\\u0434\\u0445\\u043E\\u0434\\u044F\\u0449\\u0438\\u0445 \\u0432\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442\\u043E\\u0432\",\n              loadingText: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              gap: 2,\n              justifyContent: \"flex-end\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"outlined\",\n                onClick: handleReset,\n                disabled: loading,\n                children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 54\n                }, this),\n                disabled: loading,\n                size: \"large\",\n                children: loading ? \"Генерация PDF...\" : \"Скачать PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 3\n  }, this);\n};\n_s(PolicyForm, \"C5TqVOfP1wqEJ85Gce3z7AJutEA=\");\n_c = PolicyForm;\nexport default PolicyForm;\nvar _c;\n$RefreshReg$(_c, \"PolicyForm\");","map":{"version":3,"names":["React","useState","useCallback","Container","Paper","Typography","TextField","Button","Grid","Alert","CircularProgress","Box","FormControl","InputLabel","Select","MenuItem","Autocomplete","Download","DownloadIcon","Description","PdfIcon","PdfGeneratorApi","downloadFile","LicensePlateInput","LicensePlateValidator","licensePlateUtils","jsxDEV","_jsxDEV","Fragment","_Fragment","initialData","fio","address","date_start","date_end","reg_number","license_plate","category","vehicle_type","vehicle_category","brand_model","insurancePeriods","value","label","days","months","vehicleTypes","PolicyForm","_s","_vehicleTypes$find","formState","setFormState","data","loading","errors","successMessage","setSuccessMessage","vehicleOptions","setVehicleOptions","vehicleLoading","setVehicleLoading","selectedPeriod","setSelectedPeriod","validateInput","field","cyrillicPattern","test","replace","updateFormData","stringValue","String","validatedValue","prev","getVehicleCategoryByType","vehicleType","vehicleInfo","find","v","handleLicensePlateChange","plateData","plateText","formatForDisplay","handleVehicleTypeChange","newCategory","newLicensePlate","validateForm","newErrors","trim","plateValidation","validate","isValid","join","dateRegex","Object","keys","length","handleSubmit","e","preventDefault","response","generatePdf","blob","filename","error","message","searchVehicles","query","fetch","encodeURIComponent","json","results","options","map","item","console","handleReset","maxWidth","sx","py","children","elevation","p","display","alignItems","mb","mr","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","severity","onSubmit","container","spacing","xs","fullWidth","onChange","target","helperText","placeholder","required","md","type","split","reverse","year","month","day","InputLabelProps","shrink","vehicleTypeLabel","mt","mx","freeSolo","getOptionLabel","option","onInputChange","event","newInputValue","newValue","renderInput","params","InputProps","endAdornment","size","renderOption","props","noOptionsText","loadingText","gap","justifyContent","onClick","disabled","startIcon","_c","$RefreshReg$"],"sources":["F:/Work/Projects/Clone-pdf/pdf-coordinate-example/frontend/src/components/PolicyForm.tsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\"\nimport {\n\tContainer,\n\tPaper,\n\tTypography,\n\tTextField,\n\tButton,\n\tGrid,\n\tAlert,\n\tCircularProgress,\n\tBox,\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem,\n\tAutocomplete,\n} from \"@mui/material\"\n\nimport {\n\tDownload as DownloadIcon,\n\tDescription as PdfIcon,\n} from \"@mui/icons-material\"\nimport {\n\tPolicyData,\n\tFormState,\n\tLicensePlateData,\n\tVehicleCategory,\n} from \"../types\"\nimport { PdfGeneratorApi, downloadFile } from \"../services/api\"\nimport LicensePlateInput from \"./LicensePlateInput\"\nimport {\n\tLicensePlateValidator,\n\tlicensePlateUtils,\n} from \"../utils/licensePlateValidation\"\n\n// Начальные данные формы\nconst initialData: PolicyData = {\n\tfio: \"\",\n\taddress: \"\",\n\tdate_start: \"\",\n\tdate_end: \"\",\n\treg_number: \"\",\n\tlicense_plate: { category: \"standard\" },\n\tvehicle_type: \"\",\n\tvehicle_category: \"standard\",\n\tbrand_model: \"\",\n}\n\n// Периоды страхования\nconst insurancePeriods = [\n\t{ value: \"15_days\", label: \"15 дней\", days: 15 },\n\t{ value: \"1_month\", label: \"1 месяц\", months: 1 },\n\t{ value: \"2_months\", label: \"2 месяца\", months: 2 },\n\t{ value: \"3_months\", label: \"3 месяца\", months: 3 },\n\t{ value: \"4_months\", label: \"4 месяца\", months: 4 },\n\t{ value: \"5_months\", label: \"5 месяцев\", months: 5 },\n\t{ value: \"6_months\", label: \"6 месяцев\", months: 6 },\n\t{ value: \"7_months\", label: \"7 месяцев\", months: 7 },\n\t{ value: \"8_months\", label: \"8 месяцев\", months: 8 },\n\t{ value: \"9_months\", label: \"9 месяцев\", months: 9 },\n\t{ value: \"10_months\", label: \"10 месяцев\", months: 10 },\n\t{ value: \"11_months\", label: \"11 месяцев\", months: 11 },\n\t{ value: \"12_months\", label: \"12 месяцев\", months: 12 },\n]\n\n// Варианты типов транспортных средств согласно ГОСТ Р 50577-2018\nconst vehicleTypes = [\n\t{\n\t\tvalue: \"A\",\n\t\tlabel: \"A. CAR / ЛЕГКОВОЙ АВТОМОБИЛЬ\",\n\t\tcategory: \"standard\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"B\",\n\t\tlabel: \"B. MOTORCYCLE / МОТОЦИКЛ\",\n\t\tcategory: \"motorcycle\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"C\",\n\t\tlabel: \"C. LORRY OR TRACTOR / ГРУЗОВОЙ АВТОМОБИЛЬ ИЛИ ТЯГАЧ\",\n\t\tcategory: \"standard\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"D\",\n\t\tlabel:\n\t\t\t\"D. CYCLE FITTED WITH AUXILIARY ENGINE / МОПЕД ИЛИ ВЕЛОСИПЕД С ПОДВЕСНЫМ ДВИГАТЕЛЕМ\",\n\t\tcategory: \"motorcycle\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"E\",\n\t\tlabel: \"E. BUS / АВТОБУС\",\n\t\tcategory: \"standard\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"F1\",\n\t\tlabel: \"F1. TRAILER TO CAR / ПРИЦЕП К ЛЕГКОВОМУ АВТОМОБИЛЮ\",\n\t\tcategory: \"trailer\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"F2\",\n\t\tlabel: \"F2. TRAILER TO LORRY / ПРИЦЕП К ГРУЗОВОМУ АВТОМОБИЛЮ\",\n\t\tcategory: \"trailer\" as VehicleCategory,\n\t},\n\t{\n\t\tvalue: \"G\",\n\t\tlabel: \"G. OTHERS / ПРОЧИЕ\",\n\t\tcategory: \"standard\" as VehicleCategory,\n\t},\n]\n\nconst PolicyForm: React.FC = () => {\n\tconst [formState, setFormState] = useState<FormState>({\n\t\tdata: initialData,\n\t\tloading: false,\n\t\terrors: {},\n\t})\n\n\tconst [successMessage, setSuccessMessage] = useState<string>(\"\")\n\tconst [vehicleOptions, setVehicleOptions] = useState<\n\t\tArray<{ label: string; value: string }>\n\t>([])\n\tconst [vehicleLoading, setVehicleLoading] = useState<boolean>(false)\n\tconst [selectedPeriod, setSelectedPeriod] = useState<string>(\"\")\n\n\t// Обновление данных формы\n\t// Валидация символов для разных полей\n\tconst validateInput = useCallback(\n\t\t(field: keyof PolicyData, value: string): string => {\n\t\t\tswitch (field) {\n\t\t\t\tcase \"fio\":\n\t\t\t\tcase \"address\":\n\t\t\t\t\t// Разрешены только кириллица, цифры, пробелы и знаки препинания\n\t\t\t\t\tconst cyrillicPattern = /^[а-яёА-ЯЁ0-9\\s.,\\-\\/№]*$/\n\t\t\t\t\tif (!cyrillicPattern.test(value)) {\n\t\t\t\t\t\treturn value.replace(/[^а-яёА-ЯЁ0-9\\s.,\\-\\/№]/g, \"\")\n\t\t\t\t\t}\n\t\t\t\t\treturn value\n\t\t\t\tdefault:\n\t\t\t\t\treturn value\n\t\t\t}\n\t\t},\n\t\t[]\n\t)\n\n\tconst updateFormData = useCallback(\n\t\t(field: keyof PolicyData, value: string | number) => {\n\t\t\tconst stringValue = String(value)\n\t\t\tconst validatedValue = validateInput(field, stringValue)\n\n\t\t\tsetFormState((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\tdata: { ...prev.data, [field]: validatedValue },\n\t\t\t\terrors: { ...prev.errors, [field]: \"\" }, // Очищаем ошибку при изменении\n\t\t\t}))\n\t\t\tsetSuccessMessage(\"\") // Очищаем сообщение об успехе\n\t\t},\n\t\t[validateInput]\n\t)\n\n\t// Определяем категорию по типу ТС\n\tconst getVehicleCategoryByType = useCallback(\n\t\t(vehicleType: string): VehicleCategory => {\n\t\t\tconst vehicleInfo = vehicleTypes.find((v) => v.value === vehicleType)\n\t\t\treturn vehicleInfo ? vehicleInfo.category : \"standard\"\n\t\t},\n\t\t[]\n\t)\n\n\t// Обработчик изменения данных регистрационного знака\n\tconst handleLicensePlateChange = useCallback(\n\t\t(plateData: LicensePlateData) => {\n\t\t\t// Генерируем текстовое представление номера\n\t\t\tconst plateText = licensePlateUtils.formatForDisplay(plateData)\n\n\t\t\tsetFormState((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\tdata: {\n\t\t\t\t\t...prev.data,\n\t\t\t\t\tlicense_plate: plateData,\n\t\t\t\t\tvehicle_category: plateData.category,\n\t\t\t\t\treg_number: plateText,\n\t\t\t\t},\n\t\t\t\terrors: { ...prev.errors, reg_number: \"\" }, // Очищаем ошибку при изменении\n\t\t\t}))\n\t\t\tsetSuccessMessage(\"\") // Очищаем сообщение об успехе\n\t\t},\n\t\t[]\n\t)\n\n\t// Обработчик изменения типа ТС - автоматически обновляем категорию номера\n\tconst handleVehicleTypeChange = useCallback(\n\t\t(vehicleType: string) => {\n\t\t\tconst newCategory = getVehicleCategoryByType(vehicleType)\n\n\t\t\t// Обновляем категорию в данных регистрационного знака\n\t\t\tconst newLicensePlate: LicensePlateData = {\n\t\t\t\tcategory: newCategory,\n\t\t\t}\n\n\t\t\tsetFormState((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\tdata: {\n\t\t\t\t\t...prev.data,\n\t\t\t\t\tvehicle_type: vehicleType,\n\t\t\t\t\tvehicle_category: newCategory,\n\t\t\t\t\tlicense_plate: newLicensePlate,\n\t\t\t\t\treg_number: \"\", // Очищаем номер при смене типа\n\t\t\t\t},\n\t\t\t\terrors: { ...prev.errors, vehicle_type: \"\", reg_number: \"\" },\n\t\t\t}))\n\t\t\tsetSuccessMessage(\"\")\n\t\t},\n\t\t[getVehicleCategoryByType]\n\t)\n\n\t// Валидация формы\n\tconst validateForm = useCallback((): boolean => {\n\t\tconst { data } = formState\n\t\tconst newErrors: Partial<Record<keyof PolicyData, string>> = {}\n\n\t\t// Проверяем обязательные поля\n\t\tif (!data.fio.trim()) newErrors.fio = \"ФИО обязательно для заполнения\"\n\t\tif (!data.address.trim())\n\t\t\tnewErrors.address = \"Адрес обязателен для заполнения\"\n\n\t\t// Валидация регистрационного знака с помощью ГОСТ валидатора\n\t\tif (data.license_plate) {\n\t\t\tconst plateValidation = LicensePlateValidator.validate(data.license_plate)\n\t\t\tif (!plateValidation.isValid) {\n\t\t\t\tnewErrors.reg_number = plateValidation.errors.join(\"; \")\n\t\t\t}\n\t\t} else {\n\t\t\tnewErrors.reg_number = \"Регистрационный знак обязателен\"\n\t\t}\n\n\t\tif (!data.vehicle_type.trim()) newErrors.vehicle_type = \"Тип ТС обязателен\"\n\t\tif (!data.brand_model.trim())\n\t\t\tnewErrors.brand_model = \"Марка и модель обязательны\"\n\n\t\t// Проверяем формат дат\n\t\tconst dateRegex = /^\\d{2}\\.\\d{2}\\.\\d{4}$/\n\t\tif (!data.date_start.trim()) {\n\t\t\tnewErrors.date_start = \"Дата начала обязательна\"\n\t\t} else if (!dateRegex.test(data.date_start)) {\n\t\t\tnewErrors.date_start = \"Формат даты: ДД.ММ.ГГГГ\"\n\t\t}\n\n\t\tif (!data.date_end.trim()) {\n\t\t\tnewErrors.date_end = \"Дата окончания обязательна\"\n\t\t} else if (!dateRegex.test(data.date_end)) {\n\t\t\tnewErrors.date_end = \"Формат даты: ДД.ММ.ГГГГ\"\n\t\t}\n\n\t\tsetFormState((prev) => ({ ...prev, errors: newErrors }))\n\t\treturn Object.keys(newErrors).length === 0\n\t}, [formState])\n\n\t// Отправка формы\n\tconst handleSubmit = useCallback(\n\t\tasync (e: React.FormEvent) => {\n\t\t\te.preventDefault()\n\n\t\t\tif (!validateForm()) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tsetFormState((prev) => ({ ...prev, loading: true }))\n\t\t\tsetSuccessMessage(\"\")\n\n\t\t\ttry {\n\t\t\t\tconst response = await PdfGeneratorApi.generatePdf(formState.data)\n\t\t\t\tdownloadFile(response.blob, response.filename)\n\t\t\t\tsetSuccessMessage(\n\t\t\t\t\t`PDF файл \"${response.filename}\" успешно сгенерирован и загружен!`\n\t\t\t\t)\n\t\t\t} catch (error: any) {\n\t\t\t\tsetFormState((prev) => ({\n\t\t\t\t\t...prev,\n\t\t\t\t\terrors: { ...prev.errors, fio: error.message },\n\t\t\t\t}))\n\t\t\t} finally {\n\t\t\t\tsetFormState((prev) => ({ ...prev, loading: false }))\n\t\t\t}\n\t\t},\n\t\t[formState.data, validateForm]\n\t)\n\n\t// Поиск автомобилей\n\tconst searchVehicles = useCallback(async (query: string) => {\n\t\tif (!query || query.length < 2) {\n\t\t\tsetVehicleOptions([])\n\t\t\treturn\n\t\t}\n\n\t\tsetVehicleLoading(true)\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`/api/search-vehicles?q=${encodeURIComponent(query)}`\n\t\t\t)\n\t\t\tconst data = await response.json()\n\n\t\t\tif (data.results) {\n\t\t\t\tconst options = data.results.map((item: any) => ({\n\t\t\t\t\tlabel: item.label,\n\t\t\t\t\tvalue: item.value,\n\t\t\t\t}))\n\t\t\t\tsetVehicleOptions(options)\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Ошибка при поиске автомобилей:\", error)\n\t\t\tsetVehicleOptions([])\n\t\t} finally {\n\t\t\tsetVehicleLoading(false)\n\t\t}\n\t}, [])\n\n\tconst { data, loading, errors } = formState\n\n\t// Сброс формы\n\tconst handleReset = useCallback(() => {\n\t\tsetFormState({\n\t\t\tdata: {\n\t\t\t\t...initialData,\n\t\t\t\tlicense_plate: { category: \"standard\" },\n\t\t\t},\n\t\t\tloading: false,\n\t\t\terrors: {},\n\t\t})\n\t\tsetSuccessMessage(\"\")\n\t\tsetVehicleOptions([])\n\t}, [])\n\n\treturn (\n\t\t<Container\n\t\t\tmaxWidth=\"md\"\n\t\t\tsx={{ py: 4 }}\n\t\t>\n\t\t\t<Paper\n\t\t\t\televation={3}\n\t\t\t\tsx={{ p: 4 }}\n\t\t\t>\n\t\t\t\t<Box\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tmb={3}\n\t\t\t\t>\n\t\t\t\t\t<PdfIcon sx={{ mr: 2, fontSize: 40, color: \"primary.main\" }} />\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h4\"\n\t\t\t\t\t\tcomponent=\"h1\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\tОформление Синей карты\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\n\t\t\t\t{successMessage && (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tseverity=\"success\"\n\t\t\t\t\t\tsx={{ mb: 3 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{successMessage}\n\t\t\t\t\t</Alert>\n\t\t\t\t)}\n\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tspacing={3}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* ФИО */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"ФИО страхователя\"\n\t\t\t\t\t\t\t\tvalue={data.fio}\n\t\t\t\t\t\t\t\tonChange={(e) => updateFormData(\"fio\", e.target.value)}\n\t\t\t\t\t\t\t\terror={!!errors.fio}\n\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\terrors.fio ||\n\t\t\t\t\t\t\t\t\t\"Только русские буквы, цифры и знаки препинания (будет автоматически транслитерировано)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder=\"Иванов Иван Иванович\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Адрес */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Адрес страхователя\"\n\t\t\t\t\t\t\t\tvalue={data.address}\n\t\t\t\t\t\t\t\tonChange={(e) => updateFormData(\"address\", e.target.value)}\n\t\t\t\t\t\t\t\terror={!!errors.address}\n\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\terrors.address ||\n\t\t\t\t\t\t\t\t\t\"Только русские буквы, цифры и знаки препинания (будет автоматически транслитерирован)\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceholder=\"г. Москва, ул. Пушкина, д. 10, кв. 5\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Даты */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tlabel=\"Дата начала полиса\"\n\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\tdata.date_start\n\t\t\t\t\t\t\t\t\t\t? data.date_start.split(\".\").reverse().join(\"-\")\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.value) {\n\t\t\t\t\t\t\t\t\t\tconst [year, month, day] = e.target.value.split(\"-\")\n\t\t\t\t\t\t\t\t\t\tupdateFormData(\"date_start\", `${day}.${month}.${year}`)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdateFormData(\"date_start\", \"\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terror={!!errors.date_start}\n\t\t\t\t\t\t\t\thelperText={errors.date_start || \"Выберите дату\"}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\tlabel=\"Дата окончания полиса\"\n\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\tdata.date_end\n\t\t\t\t\t\t\t\t\t\t? data.date_end.split(\".\").reverse().join(\"-\")\n\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.target.value) {\n\t\t\t\t\t\t\t\t\t\tconst [year, month, day] = e.target.value.split(\"-\")\n\t\t\t\t\t\t\t\t\t\tupdateFormData(\"date_end\", `${day}.${month}.${year}`)\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdateFormData(\"date_end\", \"\")\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terror={!!errors.date_end}\n\t\t\t\t\t\t\t\thelperText={errors.date_end || \"Выберите дату\"}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Регистрационный знак */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<LicensePlateInput\n\t\t\t\t\t\t\t\tvalue={data.license_plate}\n\t\t\t\t\t\t\t\tonChange={handleLicensePlateChange}\n\t\t\t\t\t\t\t\tcategory={data.vehicle_category || \"standard\"}\n\t\t\t\t\t\t\t\tvehicleTypeLabel={\n\t\t\t\t\t\t\t\t\tvehicleTypes.find((v) => v.value === data.vehicle_type)?.label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\terror={errors.reg_number}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Тип ТС */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\terror={!!errors.vehicle_type}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<InputLabel>Тип транспортного средства</InputLabel>\n\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\tvalue={data.vehicle_type}\n\t\t\t\t\t\t\t\t\tonChange={(e) => handleVehicleTypeChange(e.target.value)}\n\t\t\t\t\t\t\t\t\tlabel=\"Тип транспортного средства\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{vehicleTypes.map((type) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\tkey={type.value}\n\t\t\t\t\t\t\t\t\t\t\tvalue={type.value}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{type.label}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t{errors.vehicle_type && (\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tvariant=\"caption\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"error\"\n\t\t\t\t\t\t\t\t\t\tsx={{ mt: 0.5, mx: 1.75 }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{errors.vehicle_type}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Марка и модель */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\t\t\toptions={vehicleOptions}\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) =>\n\t\t\t\t\t\t\t\t\ttypeof option === \"string\" ? option : option.label\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={data.brand_model}\n\t\t\t\t\t\t\t\tonInputChange={(event, newInputValue) => {\n\t\t\t\t\t\t\t\t\tupdateFormData(\"brand_model\", newInputValue)\n\t\t\t\t\t\t\t\t\tsearchVehicles(newInputValue)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\t\t\t\tconst value =\n\t\t\t\t\t\t\t\t\t\ttypeof newValue === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t? newValue\n\t\t\t\t\t\t\t\t\t\t\t: newValue?.value || \"\"\n\t\t\t\t\t\t\t\t\tupdateFormData(\"brand_model\", value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tloading={vehicleLoading}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tlabel=\"Марка и модель\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Начните вводить марку или модель...\"\n\t\t\t\t\t\t\t\t\t\terror={!!errors.brand_model}\n\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\terrors.brand_model ||\n\t\t\t\t\t\t\t\t\t\t\t\"Выберите из списка или введите свой вариант\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{vehicleLoading ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\trenderOption={(props, option) => (\n\t\t\t\t\t\t\t\t\t<li {...props}>\n\t\t\t\t\t\t\t\t\t\t{typeof option === \"string\" ? option : option.label}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tnoOptionsText=\"Нет подходящих вариантов\"\n\t\t\t\t\t\t\t\tloadingText=\"Поиск...\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t{/* Кнопки */}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\tgap={2}\n\t\t\t\t\t\t\t\tjustifyContent=\"flex-end\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tОчистить\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tstartIcon={\n\t\t\t\t\t\t\t\t\t\tloading ? <CircularProgress size={20} /> : <DownloadIcon />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{loading ? \"Генерация PDF...\" : \"Скачать PDF\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t</Container>\n\t)\n}\n\nexport default PolicyForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}