{"ast":null,"code":"import axios from\"axios\";// Базовый URL для API\nconst API_BASE_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000/api\";// Создаем экземпляр axios\nconst api=axios.create({baseURL:API_BASE_URL,timeout:30000// 30 секунд таймаут для генерации PDF\n});// Сервис для работы с API\nexport class PdfGeneratorApi{/**\r\n\t * Генерация PDF с данными полиса\r\n\t */static async generatePdf(data){try{const response=await api.post(\"/generate-pdf\",data,{responseType:\"blob\"// Важно для получения файла\n});// Извлекаем имя файла из заголовков ответа\nconst contentDisposition=response.headers[\"content-disposition\"];let filename=\"policy.pdf\";if(contentDisposition){const filenameMatch=contentDisposition.match(/filename=\"(.+)\"/);if(filenameMatch){filename=filenameMatch[1];}}return{blob:response.data,filename:filename};}catch(error){var _error$response;if((_error$response=error.response)!==null&&_error$response!==void 0&&_error$response.data){// Если ошибка содержит JSON, пытаемся ее прочитать\nconst errorText=await error.response.data.text();try{const errorData=JSON.parse(errorText);throw new Error(errorData.error||\"Ошибка при генерации PDF\");}catch(_unused){throw new Error(\"Ошибка при генерации PDF\");}}throw new Error(error.message||\"Ошибка при генерации PDF\");}}/**\r\n\t * Валидация даты\r\n\t */static async validateDate(date){try{const response=await api.post(\"/validate-date\",{date:date});return response.data;}catch(error){var _error$response2,_error$response2$data;return{valid:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||\"Ошибка валидации даты\"};}}/**\r\n\t * Проверка работоспособности API\r\n\t */static async healthCheck(){try{const response=await api.get(\"/health\");return response.data;}catch(error){return{error:error.message||\"API недоступен\"};}}}/**\r\n * Утилита для скачивания файла\r\n */export const downloadFile=(blob,filename)=>{const url=window.URL.createObjectURL(blob);const link=document.createElement(\"a\");link.href=url;link.download=filename;document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","PdfGeneratorApi","generatePdf","data","response","post","responseType","contentDisposition","headers","filename","filenameMatch","match","blob","error","_error$response","errorText","text","errorData","JSON","parse","Error","_unused","message","validateDate","date","_error$response2","_error$response2$data","valid","healthCheck","get","downloadFile","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["F:/Work/Projects/Clone-pdf/pdf-coordinate-example/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\"\r\nimport {\r\n\tPolicyData,\r\n\tApiResponse,\r\n\tValidationResult,\r\n\tDownloadResponse,\r\n} from \"../types\"\r\n\r\n// Базовый URL для API\r\nconst API_BASE_URL =\r\n\tprocess.env.REACT_APP_API_URL || \"http://localhost:5000/api\"\r\n\r\n// Создаем экземпляр axios\r\nconst api = axios.create({\r\n\tbaseURL: API_BASE_URL,\r\n\ttimeout: 30000, // 30 секунд таймаут для генерации PDF\r\n})\r\n\r\n// Сервис для работы с API\r\nexport class PdfGeneratorApi {\r\n\t/**\r\n\t * Генерация PDF с данными полиса\r\n\t */\r\n\tstatic async generatePdf(data: PolicyData): Promise<DownloadResponse> {\r\n\t\ttry {\r\n\t\t\tconst response: AxiosResponse<Blob> = await api.post(\r\n\t\t\t\t\"/generate-pdf\",\r\n\t\t\t\tdata,\r\n\t\t\t\t{\r\n\t\t\t\t\tresponseType: \"blob\", // Важно для получения файла\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\t// Извлекаем имя файла из заголовков ответа\r\n\t\t\tconst contentDisposition = response.headers[\"content-disposition\"]\r\n\t\t\tlet filename = \"policy.pdf\"\r\n\r\n\t\t\tif (contentDisposition) {\r\n\t\t\t\tconst filenameMatch = contentDisposition.match(/filename=\"(.+)\"/)\r\n\t\t\t\tif (filenameMatch) {\r\n\t\t\t\t\tfilename = filenameMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tblob: response.data,\r\n\t\t\t\tfilename: filename,\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\tif (error.response?.data) {\r\n\t\t\t\t// Если ошибка содержит JSON, пытаемся ее прочитать\r\n\t\t\t\tconst errorText = await error.response.data.text()\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst errorData = JSON.parse(errorText)\r\n\t\t\t\t\tthrow new Error(errorData.error || \"Ошибка при генерации PDF\")\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tthrow new Error(\"Ошибка при генерации PDF\")\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(error.message || \"Ошибка при генерации PDF\")\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Валидация даты\r\n\t */\r\n\tstatic async validateDate(date: string): Promise<ValidationResult> {\r\n\t\ttry {\r\n\t\t\tconst response: AxiosResponse<ValidationResult> = await api.post(\r\n\t\t\t\t\"/validate-date\",\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: date,\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\treturn response.data\r\n\t\t} catch (error: any) {\r\n\t\t\treturn {\r\n\t\t\t\tvalid: false,\r\n\t\t\t\terror: error.response?.data?.error || \"Ошибка валидации даты\",\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Проверка работоспособности API\r\n\t */\r\n\tstatic async healthCheck(): Promise<ApiResponse> {\r\n\t\ttry {\r\n\t\t\tconst response: AxiosResponse<ApiResponse> = await api.get(\"/health\")\r\n\t\t\treturn response.data\r\n\t\t} catch (error: any) {\r\n\t\t\treturn {\r\n\t\t\t\terror: error.message || \"API недоступен\",\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Утилита для скачивания файла\r\n */\r\nexport const downloadFile = (blob: Blob, filename: string): void => {\r\n\tconst url = window.URL.createObjectURL(blob)\r\n\tconst link = document.createElement(\"a\")\r\n\tlink.href = url\r\n\tlink.download = filename\r\n\tdocument.body.appendChild(link)\r\n\tlink.click()\r\n\tdocument.body.removeChild(link)\r\n\twindow.URL.revokeObjectURL(url)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}